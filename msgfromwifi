#include <WiFi.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <WebServer.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET    -1
#define SCREEN_ADDRESS 0x3C

const char* ssid = "sardar";
const char* password = "12345678";

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
WebServer server(80);

void displayMultiline(String msg) {
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);

  int lineHeight = 8;
  int maxLines = SCREEN_HEIGHT / lineHeight;
  int currentLine = 0;

  int start = 0;
  while (start < msg.length() && currentLine < maxLines) {
    int end = start + 21;
    if (end > msg.length()) end = msg.length();
    String line = msg.substring(start, end);
    display.setCursor(0, currentLine * lineHeight);
    display.println(line);
    start = end;
    currentLine++;
  }

  display.display();
}

void handleRoot() {
  String html = R"rawliteral(
    <!DOCTYPE html>
    <html>
    <body>
      <h2>ESP32 OLED Display</h2>
      <form action="/send">
        <textarea name="msg" rows="4" cols="30" placeholder="Enter multiple lines..."></textarea><br>
        <input type="submit" value="Display">
      </form>
    </body>
    </html>
  )rawliteral";
  server.send(200, "text/html", html);
}

void handleSend() {
  if (server.hasArg("msg")) {
    String msg = server.arg("msg");
    Serial.println("Message: " + msg);

    displayMultiline(msg);

    server.send(200, "text/html", "<p>Message shown!</p><a href='/'>Back</a>");
  } else {
    server.send(400, "text/plain", "No message received");
  }
}

void setup() {
  Serial.begin(115200);
  Wire.begin(21, 22);

  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println("OLED init failed");
    while (true);
  }

  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);
  display.println("Connecting...");
  display.display();

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("\nConnected! IP: " + WiFi.localIP().toString());

  display.clearDisplay();
  display.setCursor(0, 0);
  display.println("IP Address:");
  display.println(WiFi.localIP());
  display.display();

  server.on("/", handleRoot);
  server.on("/send", handleSend);
  server.begin();
}

void loop() {
  server.handleClient();
}
